apiVersion: v1
kind: List
metadata:
  name: amq-broker-72-basic
  annotations:
    description: Red Hat AMQ Broker 7.2 (Ephemeral, no SSL)
    openshift.io/provider-display-name: Red Hat, Inc.
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: amq-broker-72-openshift
    annotations:
      openshift.io/display-name: Red Hat AMQ Broker 7.2
      openshift.io/provider-display-name: Red Hat, Inc.
  spec:
    lookupPolicy:
      local: true
    tags:
    - name: '1.3'
      annotations:
        description: Red Hat AMQ Broker 7.2.4 image.
        iconClass: icon-jboss
        tags: messaging,amq,jboss,xpaas
        supports: amq:7.2,messaging:1.3
        version: '1.3'
      from:
        kind: DockerImage
        name: registry.access.redhat.com/amq-broker-7/amq-broker-72-openshift:1.3
    - name: '1.2'
      annotations:
        description: Red Hat AMQ Broker 7.2.3 image.
        iconClass: icon-jboss
        tags: messaging,amq,jboss,xpaas
        supports: amq:7.2,messaging:1.2
        version: '1.2'
      from:
        kind: DockerImage
        name: registry.access.redhat.com/amq-broker-7/amq-broker-72-openshift:1.2
    - name: '1.1'
      annotations:
        description: Red Hat AMQ Broker 7.2.2 image.
        iconClass: icon-jboss
        tags: messaging,amq,jboss,xpaas
        supports: amq:7.2,messaging:1.1
        version: '1.1'
      from:
        kind: DockerImage
        name: registry.access.redhat.com/amq-broker-7/amq-broker-72-openshift:1.1
    - name: '1.0'
      annotations:
        description: Red Hat AMQ Broker 7.2.1 image.
        iconClass: icon-jboss
        tags: messaging,amq,jboss,xpaas
        supports: amq:7.2,messaging:1.0
        version: '1.0'
      from:
        kind: DockerImage
        name: registry.access.redhat.com/amq-broker-7/amq-broker-72-openshift:1.0
- apiVersion: v1
  kind: Service
  metadata:
    name: amq-broker-jolokia
    labels:
      app: amq-broker
    annotations:
      description: The broker's console and Jolokia port.
  spec:
    ports:
    - port: 8161
      targetPort: 8161
    selector:
      deploymentConfig: amq-broker
- apiVersion: v1
  kind: Service
  metadata:
    name: amq-broker-amqp
    labels:
      app: amq-broker
    annotations:
      description: The broker's AMQP port.
  spec:
    ports:
    - port: 5672
      targetPort: 5672
    selector:
      deploymentConfig: amq-broker
- apiVersion: v1
  kind: Service
  metadata:
    name: amq-broker-mqtt
    labels:
      app: amq-broker
    annotations:
      description: The broker's MQTT port.
  spec:
    ports:
    - port: 1883
      targetPort: 1883
    selector:
      deploymentConfig: amq-broker
- apiVersion: v1
  kind: Service
  metadata:
    name: amq-broker-stomp
    labels:
      app: amq-broker
    annotations:
      description: The broker's STOMP port.
  spec:
    ports:
    - port: 61613
      targetPort: 61613
    selector:
      deploymentConfig: amq-broker
- apiVersion: v1
  kind: Service
  metadata:
    name: amq-broker-tcp
    labels:
      app: amq-broker
    annotations:
      description: The broker's OpenWire port.
      service.alpha.openshift.io/dependencies: '[{"name": "amq-broker-amqp",
        "kind": "Service"},{"name": "amq-broker-mqtt", "kind": "Service"},{"name":
        "amq-broker-stomp", "kind": "Service"}]'
  spec:
    ports:
    - port: 61616
      targetPort: 61616
    selector:
      deploymentConfig: amq-broker
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: amq-broker
    labels:
      app: amq-broker
  spec:
    replicas: 1
    selector:
      deploymentConfig: amq-broker
    strategy:
      type: Rolling
      rollingParams:
        maxSurge: 0
    template:
      metadata:
        name: amq-broker
        labels:
          app: amq-broker
          deploymentConfig: amq-broker
      spec:
        containers:
        - name: amq-broker
          image: amq-broker-72-openshift:1.3
          imagePullPolicy: Always
          env:
          - name: AMQ_USER
            value: work-queue
          - name: AMQ_PASSWORD
            value: work-queue
          - name: AMQ_QUEUES
            value: work-queue/requests,work-queue/responses
          - name: AMQ_ADDRESSES
            value: work-queue/worker-updates
          readinessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - "/opt/amq/bin/readinessProbe.sh"
          ports:
          - containerPort: 8161
            name: console-jolokia
            protocol: TCP
          - containerPort: 5672
            name: amqp
            protocol: TCP
          - containerPort: 1883
            name: mqtt
            protocol: TCP
          - containerPort: 61613
            name: stomp
            protocol: TCP
          - containerPort: 61616
            name: artemis
            protocol: TCP
          terminationGracePeriodSeconds: 60
          # this post-start hook is a workaround for AMQ's inability to create a topic (multicast queue) at startup
          # don't worry about the AMQ pod being in "creating" state for too long, that's how post-start hooks work
          # this relies on readinessProbe.sh retrying for a while!
          lifecycle:
            postStart:
              exec:
                command:
                - "/bin/bash"
                - "-c"
                - "/opt/amq/bin/readinessProbe.sh && /opt/amq/bin/artemis address update --name work-queue/worker-updates --multicast --silent && /opt/amq/bin/artemis queue create --name work-queue/worker-updates --durable --silent"
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - amq-broker
        from:
          kind: ImageStreamTag
          name: amq-broker-72-openshift:1.3
    - type: ConfigChange
